// <auto-generated />
using Instituto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Instituto.Migrations
{
    [DbContext(typeof(InstitutoDbContext))]
    partial class InstitutoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Instituto.Models.Carrera", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("CarNombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("mtemasMatId")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("mtemasMatId");

                    b.ToTable("carreras");
                });

            modelBuilder.Entity("Instituto.Models.CarreraDocente", b =>
                {
                    b.Property<int>("CarDocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarDocId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("UsuId")
                        .HasColumnType("int");

                    b.HasKey("CarDocId");

                    b.HasIndex("CarId");

                    b.HasIndex("UsuId", "CarId")
                        .IsUnique();

                    b.ToTable("carrerasDocente");
                });

            modelBuilder.Entity("Instituto.Models.Estado", b =>
                {
                    b.Property<int>("EstId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstId"));

                    b.Property<string>("EstDenominacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("EstId");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("Instituto.Models.Materia", b =>
                {
                    b.Property<int>("MatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatId"));

                    b.Property<string>("MatNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatId");

                    b.ToTable("mtemas");
                });

            modelBuilder.Entity("Instituto.Models.MateriaAlumno", b =>
                {
                    b.Property<int>("MatAluId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatAluId"));

                    b.Property<int?>("AlumnoUsuId")
                        .HasColumnType("int");

                    b.Property<int>("MatId")
                        .HasColumnType("int");

                    b.Property<int>("UsuId")
                        .HasColumnType("int");

                    b.HasKey("MatAluId");

                    b.HasIndex("AlumnoUsuId");

                    b.HasIndex("MatId");

                    b.HasIndex("UsuId", "MatId")
                        .IsUnique();

                    b.ToTable("materiasAlumno");
                });

            modelBuilder.Entity("Instituto.Models.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("RolDenominacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RolId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Instituto.Models.Usuario", b =>
                {
                    b.Property<int>("UsuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("EstId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("UsuApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuDni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuId");

                    b.HasIndex("EstId");

                    b.HasIndex("RolId");

                    b.ToTable("usuarios");

                    b.HasDiscriminator().HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Instituto.Models.Alumno", b =>
                {
                    b.HasBaseType("Instituto.Models.Usuario");

                    b.Property<string>("AlumnoMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.HasIndex("CarId");

                    b.ToTable("usuarios", t =>
                        {
                            t.Property("CarId")
                                .HasColumnName("Alumno_CarId");
                        });

                    b.HasDiscriminator().HasValue("Alumno");
                });

            modelBuilder.Entity("Instituto.Models.Docente", b =>
                {
                    b.HasBaseType("Instituto.Models.Usuario");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("MatId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("Instituto.Models.Carrera", b =>
                {
                    b.HasOne("Instituto.Models.Materia", "mtemas")
                        .WithMany("Carreras")
                        .HasForeignKey("mtemasMatId");

                    b.Navigation("mtemas");
                });

            modelBuilder.Entity("Instituto.Models.CarreraDocente", b =>
                {
                    b.HasOne("Instituto.Models.Carrera", "Carreras")
                        .WithMany("CarreraDocentes")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituto.Models.Docente", "Docentes")
                        .WithMany("CarreraDocentes")
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carreras");

                    b.Navigation("Docentes");
                });

            modelBuilder.Entity("Instituto.Models.MateriaAlumno", b =>
                {
                    b.HasOne("Instituto.Models.Alumno", null)
                        .WithMany("MateriaAlumnos")
                        .HasForeignKey("AlumnoUsuId");

                    b.HasOne("Instituto.Models.Materia", "Materias")
                        .WithMany("MateriaAlumnos")
                        .HasForeignKey("MatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituto.Models.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materias");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Instituto.Models.Usuario", b =>
                {
                    b.HasOne("Instituto.Models.Estado", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Instituto.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Instituto.Models.Alumno", b =>
                {
                    b.HasOne("Instituto.Models.Carrera", "Carrera")
                        .WithMany("Alumnos")
                        .HasForeignKey("CarId");

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("Instituto.Models.Carrera", b =>
                {
                    b.Navigation("Alumnos");

                    b.Navigation("CarreraDocentes");
                });

            modelBuilder.Entity("Instituto.Models.Estado", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Instituto.Models.Materia", b =>
                {
                    b.Navigation("Carreras");

                    b.Navigation("MateriaAlumnos");
                });

            modelBuilder.Entity("Instituto.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Instituto.Models.Alumno", b =>
                {
                    b.Navigation("MateriaAlumnos");
                });

            modelBuilder.Entity("Instituto.Models.Docente", b =>
                {
                    b.Navigation("CarreraDocentes");
                });
#pragma warning restore 612, 618
        }
    }
}
